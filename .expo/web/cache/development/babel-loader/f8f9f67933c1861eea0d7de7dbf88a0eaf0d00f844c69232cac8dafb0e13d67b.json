{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nexport var getHomeOptionsData = function () {\n  var _ref = _asyncToGenerator(function* (type, pageIndex, pageSize) {\n    try {\n      var url;\n      if (type === \"active\") {\n        url = `http://192.168.0.104:3000/activeOrg/${pageIndex}/${pageSize}?`;\n      } else if (type === \"newAdded\") {\n        url = `http://192.168.0.104:3000/newAddedOrg/${pageIndex}/${pageSize}?`;\n      } else {\n        url = `http://192.168.0.104:3000/removedOrg/${pageIndex}/${pageSize}?`;\n      }\n      var response = yield fetch(url);\n      if (!response.ok) {\n        throw new Error(\"Network request failed\");\n      }\n      var data = yield response.json();\n      if (data) {\n        return data;\n      } else {\n        return null;\n      }\n    } catch (error) {\n      console.error(\"Error fetching dummy JSON:\", error.message);\n    }\n  });\n  return function getHomeOptionsData(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["getHomeOptionsData","_ref","_asyncToGenerator","type","pageIndex","pageSize","url","response","fetch","ok","Error","data","json","error","console","message","_x","_x2","_x3","apply","arguments"],"sources":["D:/RetroSoft official/license-checker-app/client/helper/getHomeOptionsData.js"],"sourcesContent":["/**\r\n * Fuction to get Home Options Data from api\r\n * @param type - String, Value: active | newAdded | removed\r\n * @param pageIndex - number\r\n * @param pageSize - (optional) default value: 20\r\n * */\r\n\r\nexport const getHomeOptionsData = async (type, pageIndex, pageSize) => {\r\n  try {\r\n    let url;\r\n    if (type === \"active\") {\r\n      url = `http://192.168.0.104:3000/activeOrg/${pageIndex}/${pageSize}?`;\r\n    } else if (type === \"newAdded\") {\r\n      url = `http://192.168.0.104:3000/newAddedOrg/${pageIndex}/${pageSize}?`;\r\n    } else {\r\n      url = `http://192.168.0.104:3000/removedOrg/${pageIndex}/${pageSize}?`;\r\n    }\r\n\r\n    const response = await fetch(url);\r\n    if (!response.ok) {\r\n      throw new Error(\"Network request failed\");\r\n    }\r\n\r\n    const data = await response.json();\r\n    if (data) {\r\n      return data;\r\n    } else {\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching dummy JSON:\", error.message);\r\n  }\r\n};\r\n"],"mappings":";AAOA,OAAO,IAAMA,kBAAkB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,IAAI,EAAEC,SAAS,EAAEC,QAAQ,EAAK;IACrE,IAAI;MACF,IAAIC,GAAG;MACP,IAAIH,IAAI,KAAK,QAAQ,EAAE;QACrBG,GAAG,GAAI,uCAAsCF,SAAU,IAAGC,QAAS,GAAE;MACvE,CAAC,MAAM,IAAIF,IAAI,KAAK,UAAU,EAAE;QAC9BG,GAAG,GAAI,yCAAwCF,SAAU,IAAGC,QAAS,GAAE;MACzE,CAAC,MAAM;QACLC,GAAG,GAAI,wCAAuCF,SAAU,IAAGC,QAAS,GAAE;MACxE;MAEA,IAAME,QAAQ,SAASC,KAAK,CAACF,GAAG,CAAC;MACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MAEA,IAAMC,IAAI,SAASJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,EAAE;QACR,OAAOA,IAAI;MACb,CAAC,MAAM;QACL,OAAO,IAAI;MACb;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC5D;EACF,CAAC;EAAA,gBAzBYf,kBAAkBA,CAAAgB,EAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAAjB,IAAA,CAAAkB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAyB9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}