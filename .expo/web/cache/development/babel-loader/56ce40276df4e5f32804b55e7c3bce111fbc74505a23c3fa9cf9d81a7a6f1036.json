{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { store } from \"./store/store\";\nimport { Provider, useDispatch } from \"react-redux\";\nimport Home from \"./components/tab screens/Home\";\nimport NewsFeed from \"./components/tab screens/NewsFeed\";\nimport Profile from \"./components/tab screens/Profile\";\nimport Discussion from \"./components/tab screens/Discussion\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Icons from \"@expo/vector-icons/MaterialIcons\";\nimport SearchResult from \"./components/stack screens/SearchResult\";\nimport NewsViewer from \"./components/stack screens/NewsViewer\";\nimport HomeOption from \"./components/stack screens/HomeOption\";\nimport { useEffect, useState } from \"react\";\nimport Loading from \"./components/utils/Loading\";\nimport { getHomeOptionsData } from \"./helper/getHomeOptionsData\";\nimport { setActiveOrg, setNewAddedOrg } from \"./slices/appSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\nvar TabScreens = function TabScreens() {\n  var dispatch = useDispatch();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  useEffect(function () {\n    var getData = function () {\n      var _ref = _asyncToGenerator(function* () {\n        setLoading(true);\n        var activeOrg = yield getHomeOptionsData(active, 1);\n        var newAddedOrg = yield getHomeOptionsData(newAdded, 1);\n        var removedOrg = yield getHomeOptionsData(removed, 1);\n        dispatch(setActiveOrg(activeOrg));\n        dispatch(setNewAddedOrg(newAddedOrg));\n        setLoading(false);\n        return;\n      });\n      return function getData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    getData();\n  }, []);\n  return _jsx(_Fragment, {\n    children: !loading ? _jsxs(Tab.Navigator, {\n      initialRouteName: \"Home\",\n      screenOptions: function screenOptions(_ref2) {\n        var route = _ref2.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n              size = _ref3.size;\n            var iconName;\n            if (route.name === \"Home\") {\n              iconName = \"home\";\n            } else if (route.name === \"NewsFeed\") {\n              iconName = \"web\";\n            } else if (route.name === \"Discussion\") {\n              iconName = \"chat\";\n            } else if (route.name === \"Profile\") {\n              iconName = \"account-circle\";\n            }\n            return _jsx(Icons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"#B9F3FF\",\n          tabBarInactiveTintColor: \"#fff\",\n          tabBarStyle: {\n            backgroundColor: \"#039EBD\",\n            borderTopEndRadius: 20,\n            borderTopLeftRadius: 20\n          },\n          headerShown: false\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: Home\n      }), _jsx(Tab.Screen, {\n        name: \"NewsFeed\",\n        component: NewsFeed\n      }), _jsx(Tab.Screen, {\n        name: \"Discussion\",\n        component: Discussion\n      }), _jsx(Tab.Screen, {\n        name: \"Profile\",\n        component: Profile\n      })]\n    }) : _jsx(View, {\n      style: {\n        flex: 7,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: _jsx(Loading, {})\n    })\n  });\n};\nvar StackScreens = function StackScreens() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"TabScreens\",\n      component: TabScreens\n    }), _jsx(Stack.Screen, {\n      name: \"SearchResult\",\n      component: SearchResult\n    }), _jsx(Stack.Screen, {\n      name: \"NewsViewer\",\n      component: NewsViewer\n    }), _jsx(Stack.Screen, {\n      name: \"HomeOption\",\n      component: HomeOption\n    })]\n  });\n};\nexport default function App() {\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Provider, {\n      store: store,\n      children: _jsx(NavigationContainer, {\n        children: _jsx(SafeAreaProvider, {\n          children: _jsx(StackScreens, {})\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["store","Provider","useDispatch","Home","NewsFeed","Profile","Discussion","SafeAreaProvider","NavigationContainer","createBottomTabNavigator","createStackNavigator","Icons","SearchResult","NewsViewer","HomeOption","useEffect","useState","Loading","getHomeOptionsData","setActiveOrg","setNewAddedOrg","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Tab","Stack","TabScreens","dispatch","_useState","_useState2","_slicedToArray","loading","setLoading","getData","_ref","_asyncToGenerator","activeOrg","active","newAddedOrg","newAdded","removedOrg","removed","apply","arguments","children","Navigator","initialRouteName","screenOptions","_ref2","route","tabBarIcon","_ref3","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","backgroundColor","borderTopEndRadius","borderTopLeftRadius","headerShown","Screen","component","View","style","flex","justifyContent","alignItems","StackScreens","App","styles","container","StyleSheet","create"],"sources":["D:/RetroSoft official/license-checker-app/client/App.js"],"sourcesContent":["//react-native\nimport { StyleSheet, Text, View } from \"react-native\";\n// redux\nimport { store } from \"./store/store\";\nimport { Provider, useDispatch } from \"react-redux\";\n// screens\nimport Home from \"./components/tab screens/Home\";\nimport NewsFeed from \"./components/tab screens/NewsFeed\";\nimport Profile from \"./components/tab screens/Profile\";\nimport Discussion from \"./components/tab screens/Discussion\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\n//navigations\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\n//assets\nimport Icons from \"@expo/vector-icons/MaterialIcons\";\nimport SearchResult from \"./components/stack screens/SearchResult\";\nimport NewsViewer from \"./components/stack screens/NewsViewer\";\nimport HomeOption from \"./components/stack screens/HomeOption\";\nimport { useEffect, useState } from \"react\";\nimport Loading from \"./components/utils/Loading\";\nimport { getHomeOptionsData } from \"./helper/getHomeOptionsData\";\nimport { setActiveOrg, setNewAddedOrg } from \"./slices/appSlice\";\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\n\nconst TabScreens = () => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const getData = async () => {\n      setLoading(true);\n      const activeOrg = await getHomeOptionsData(active, 1);\n      const newAddedOrg = await getHomeOptionsData(newAdded, 1);\n      const removedOrg = await getHomeOptionsData(removed, 1);\n\n      dispatch(setActiveOrg(activeOrg));\n      dispatch(setNewAddedOrg(newAddedOrg));\n      setLoading(false);\n\n      return;\n    };\n    getData();\n  }, []);\n\n  return (\n    <>\n      {!loading ? (\n        <Tab.Navigator\n          initialRouteName=\"Home\"\n          screenOptions={({ route }) => ({\n            tabBarIcon: ({ color, size }) => {\n              let iconName;\n\n              if (route.name === \"Home\") {\n                iconName = \"home\";\n              } else if (route.name === \"NewsFeed\") {\n                iconName = \"web\";\n              } else if (route.name === \"Discussion\") {\n                iconName = \"chat\";\n              } else if (route.name === \"Profile\") {\n                iconName = \"account-circle\";\n              }\n              // You can return any component that you like here!\n              return <Icons name={iconName} size={size} color={color} />;\n            },\n            tabBarActiveTintColor: \"#B9F3FF\",\n            tabBarInactiveTintColor: \"#fff\",\n            tabBarStyle: {\n              backgroundColor: \"#039EBD\",\n              borderTopEndRadius: 20,\n              borderTopLeftRadius: 20,\n            },\n            headerShown: false,\n          })}\n        >\n          <Tab.Screen name=\"Home\" component={Home} />\n          <Tab.Screen name=\"NewsFeed\" component={NewsFeed} />\n          <Tab.Screen name=\"Discussion\" component={Discussion} />\n          <Tab.Screen name=\"Profile\" component={Profile} />\n        </Tab.Navigator>\n      ) : (\n        <View\n          style={{ flex: 7, justifyContent: \"center\", alignItems: \"center\" }}\n        >\n          <Loading />\n        </View>\n      )}\n    </>\n  );\n};\n\nconst StackScreens = () => {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"TabScreens\" component={TabScreens} />\n      <Stack.Screen name=\"SearchResult\" component={SearchResult} />\n      <Stack.Screen name=\"NewsViewer\" component={NewsViewer} />\n      <Stack.Screen name=\"HomeOption\" component={HomeOption} />\n    </Stack.Navigator>\n  );\n};\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Provider store={store}>\n        <NavigationContainer>\n          <SafeAreaProvider>\n            <StackScreens />\n          </SafeAreaProvider>\n        </NavigationContainer>\n      </Provider>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"mappings":";;;;;AAGA,SAASA,KAAK;AACd,SAASC,QAAQ,EAAEC,WAAW,QAAQ,aAAa;AAEnD,OAAOC,IAAI;AACX,OAAOC,QAAQ;AACf,OAAOC,OAAO;AACd,OAAOC,UAAU;AACjB,SAASC,gBAAgB,QAAQ,gCAAgC;AAEjE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,oBAAoB,QAAQ,yBAAyB;AAG9D,OAAOC,KAAK,MAAM,kCAAkC;AACpD,OAAOC,YAAY;AACnB,OAAOC,UAAU;AACjB,OAAOC,UAAU;AACjB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,OAAO;AACd,SAASC,kBAAkB;AAC3B,SAASC,YAAY,EAAEC,cAAc;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACjE,IAAMC,GAAG,GAAGlB,wBAAwB,CAAC,CAAC;AACtC,IAAMmB,KAAK,GAAGlB,oBAAoB,CAAC,CAAC;AAEpC,IAAMmB,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACvB,IAAMC,QAAQ,GAAG5B,WAAW,CAAC,CAAC;EAC9B,IAAA6B,SAAA,GAA8Bf,QAAQ,CAAC,KAAK,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1BjB,SAAS,CAAC,YAAM;IACd,IAAMqB,OAAO;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QAC1BH,UAAU,CAAC,IAAI,CAAC;QAChB,IAAMI,SAAS,SAASrB,kBAAkB,CAACsB,MAAM,EAAE,CAAC,CAAC;QACrD,IAAMC,WAAW,SAASvB,kBAAkB,CAACwB,QAAQ,EAAE,CAAC,CAAC;QACzD,IAAMC,UAAU,SAASzB,kBAAkB,CAAC0B,OAAO,EAAE,CAAC,CAAC;QAEvDd,QAAQ,CAACX,YAAY,CAACoB,SAAS,CAAC,CAAC;QACjCT,QAAQ,CAACV,cAAc,CAACqB,WAAW,CAAC,CAAC;QACrCN,UAAU,CAAC,KAAK,CAAC;QAEjB;MACF,CAAC;MAAA,gBAXKC,OAAOA,CAAA;QAAA,OAAAC,IAAA,CAAAQ,KAAA,OAAAC,SAAA;MAAA;IAAA,GAWZ;IACDV,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,OACEd,IAAA,CAAAI,SAAA;IAAAqB,QAAA,EACG,CAACb,OAAO,GACPV,KAAA,CAACG,GAAG,CAACqB,SAAS;MACZC,gBAAgB,EAAC,MAAM;MACvBC,aAAa,EAAE,SAAAA,cAAAC,KAAA;QAAA,IAAGC,KAAK,GAAAD,KAAA,CAALC,KAAK;QAAA,OAAQ;UAC7BC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAAqB;YAAA,IAAlBC,KAAK,GAAAD,KAAA,CAALC,KAAK;cAAEC,IAAI,GAAAF,KAAA,CAAJE,IAAI;YACxB,IAAIC,QAAQ;YAEZ,IAAIL,KAAK,CAACM,IAAI,KAAK,MAAM,EAAE;cACzBD,QAAQ,GAAG,MAAM;YACnB,CAAC,MAAM,IAAIL,KAAK,CAACM,IAAI,KAAK,UAAU,EAAE;cACpCD,QAAQ,GAAG,KAAK;YAClB,CAAC,MAAM,IAAIL,KAAK,CAACM,IAAI,KAAK,YAAY,EAAE;cACtCD,QAAQ,GAAG,MAAM;YACnB,CAAC,MAAM,IAAIL,KAAK,CAACM,IAAI,KAAK,SAAS,EAAE;cACnCD,QAAQ,GAAG,gBAAgB;YAC7B;YAEA,OAAOnC,IAAA,CAACX,KAAK;cAAC+C,IAAI,EAAED,QAAS;cAACD,IAAI,EAAEA,IAAK;cAACD,KAAK,EAAEA;YAAM,CAAE,CAAC;UAC5D,CAAC;UACDI,qBAAqB,EAAE,SAAS;UAChCC,uBAAuB,EAAE,MAAM;UAC/BC,WAAW,EAAE;YACXC,eAAe,EAAE,SAAS;YAC1BC,kBAAkB,EAAE,EAAE;YACtBC,mBAAmB,EAAE;UACvB,CAAC;UACDC,WAAW,EAAE;QACf,CAAC;MAAA,CAAE;MAAAlB,QAAA,GAEHzB,IAAA,CAACK,GAAG,CAACuC,MAAM;QAACR,IAAI,EAAC,MAAM;QAACS,SAAS,EAAEhE;MAAK,CAAE,CAAC,EAC3CmB,IAAA,CAACK,GAAG,CAACuC,MAAM;QAACR,IAAI,EAAC,UAAU;QAACS,SAAS,EAAE/D;MAAS,CAAE,CAAC,EACnDkB,IAAA,CAACK,GAAG,CAACuC,MAAM;QAACR,IAAI,EAAC,YAAY;QAACS,SAAS,EAAE7D;MAAW,CAAE,CAAC,EACvDgB,IAAA,CAACK,GAAG,CAACuC,MAAM;QAACR,IAAI,EAAC,SAAS;QAACS,SAAS,EAAE9D;MAAQ,CAAE,CAAC;IAAA,CACpC,CAAC,GAEhBiB,IAAA,CAAC8C,IAAI;MACHC,KAAK,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAzB,QAAA,EAEnEzB,IAAA,CAACL,OAAO,IAAE;IAAC,CACP;EACP,CACD,CAAC;AAEP,CAAC;AAED,IAAMwD,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,OACEjD,KAAA,CAACI,KAAK,CAACoB,SAAS;IAACE,aAAa,EAAE;MAAEe,WAAW,EAAE;IAAM,CAAE;IAAAlB,QAAA,GACrDzB,IAAA,CAACM,KAAK,CAACsC,MAAM;MAACR,IAAI,EAAC,YAAY;MAACS,SAAS,EAAEtC;IAAW,CAAE,CAAC,EACzDP,IAAA,CAACM,KAAK,CAACsC,MAAM;MAACR,IAAI,EAAC,cAAc;MAACS,SAAS,EAAEvD;IAAa,CAAE,CAAC,EAC7DU,IAAA,CAACM,KAAK,CAACsC,MAAM;MAACR,IAAI,EAAC,YAAY;MAACS,SAAS,EAAEtD;IAAW,CAAE,CAAC,EACzDS,IAAA,CAACM,KAAK,CAACsC,MAAM;MAACR,IAAI,EAAC,YAAY;MAACS,SAAS,EAAErD;IAAW,CAAE,CAAC;EAAA,CAC1C,CAAC;AAEtB,CAAC;AAED,eAAe,SAAS4D,GAAGA,CAAA,EAAG;EAC5B,OACEpD,IAAA,CAAC8C,IAAI;IAACC,KAAK,EAAEM,MAAM,CAACC,SAAU;IAAA7B,QAAA,EAC5BzB,IAAA,CAACrB,QAAQ;MAACD,KAAK,EAAEA,KAAM;MAAA+C,QAAA,EACrBzB,IAAA,CAACd,mBAAmB;QAAAuC,QAAA,EAClBzB,IAAA,CAACf,gBAAgB;UAAAwC,QAAA,EACfzB,IAAA,CAACmD,YAAY,IAAE;QAAC,CACA;MAAC,CACA;IAAC,CACd;EAAC,CACP,CAAC;AAEX;AAEA,IAAME,MAAM,GAAGE,UAAU,CAACC,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTN,IAAI,EAAE;EACR;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}