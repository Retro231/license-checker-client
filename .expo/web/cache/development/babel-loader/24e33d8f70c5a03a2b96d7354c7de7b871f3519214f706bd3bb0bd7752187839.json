{"ast":null,"code":"import { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Home from \"./components/tab screens/Home\";\nimport NewsFeed from \"./components/tab screens/NewsFeed\";\nimport Profile from \"./components/tab screens/Profile\";\nimport Discussion from \"./components/tab screens/Discussion\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport \"react-native-gesture-handler\";\nimport Icons from \"@expo/vector-icons/MaterialIcons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\nvar TabScreens = function TabScreens() {\n  _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            if (route.name === \"Home\") {\n              iconName = \"home\";\n            } else if (route.name === \"NewsFeed\") {\n              iconName = \"web\";\n            } else if (route.name === \"Discussion\") {\n              iconName = \"chat\";\n            } else if (route.name === \"Profile\") {\n              iconName = \"account-circle\";\n            }\n            return _jsx(Icons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"tomato\",\n          tabBarInactiveTintColor: \"gray\",\n          headerShown: false\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: Home\n      }), _jsx(Tab.Screen, {\n        name: \"NewsFeed\",\n        component: NewsFeed\n      }), _jsx(Tab.Screen, {\n        name: \"Discussion\",\n        component: Discussion\n      }), _jsx(Tab.Screen, {\n        name: \"Profile\",\n        component: Profile\n      })]\n    })\n  });\n};\nvar StackScreens = function StackScreens() {\n  _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: TabScreens\n      }), _jsx(Stack.Screen, {\n        name: \"Profile\",\n        component: Profile\n      })]\n    })\n  });\n};\nexport default function App() {\n  return _jsx(View, {});\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","Home","NewsFeed","Profile","Discussion","NavigationContainer","createBottomTabNavigator","createStackNavigator","Icons","jsx","_jsx","jsxs","_jsxs","Tab","Stack","TabScreens","children","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","Screen","component","StackScreens","App","styles","create"],"sources":["D:/RetroSoft official/license-checker/App.js"],"sourcesContent":["//react-native\nimport { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View } from \"react-native\";\n// screens\nimport Home from \"./components/tab screens/Home\";\nimport NewsFeed from \"./components/tab screens/NewsFeed\";\nimport Profile from \"./components/tab screens/Profile\";\nimport Discussion from \"./components/tab screens/Discussion\";\n//navigations\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport \"react-native-gesture-handler\";\n//assets\nimport Icons from \"@expo/vector-icons/MaterialIcons\";\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\n\nconst TabScreens = () =>{\n  <NavigationContainer>\n  <Tab.Navigator\n    screenOptions={({ route }) => ({\n      tabBarIcon: ({ color, size }) => {\n        let iconName;\n\n        if (route.name === \"Home\") {\n          iconName = \"home\";\n        } else if (route.name === \"NewsFeed\") {\n          iconName = \"web\";\n        } else if (route.name === \"Discussion\") {\n          iconName = \"chat\";\n        } else if (route.name === \"Profile\") {\n          iconName = \"account-circle\";\n        }\n        // You can return any component that you like here!\n        return <Icons name={iconName} size={size} color={color} />;\n      },\n      tabBarActiveTintColor: \"tomato\",\n      tabBarInactiveTintColor: \"gray\",\n      headerShown: false,\n    })}\n  >\n    <Tab.Screen name=\"Home\" component={Home} />\n    <Tab.Screen name=\"NewsFeed\" component={NewsFeed} />\n    <Tab.Screen name=\"Discussion\" component={Discussion} />\n    <Tab.Screen name=\"Profile\" component={Profile} />\n  </Tab.Navigator>\n</NavigationContainer>\n}\n\nconst StackScreens = () => {\n  <NavigationContainer>\n    <Stack.Navigator>\n      <Stack.Screen name=\"Home\" component={TabScreens} />\n      <Stack.Screen name=\"Profile\" component={Profile} />\n    </Stack.Navigator>\n  </NavigationContainer>;\n};\n\nexport default function App() {\n  return (\n    <View>\n      \n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}