{"ast":null,"code":"import { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Home from \"./components/tab screens/Home\";\nimport NewsFeed from \"./components/tab screens/NewsFeed\";\nimport Profile from \"./components/tab screens/Profile\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Icons from \"@expo/vector-icons/MaterialIcons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          header: {\n            vi: vi\n          },\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            if (route.name === \"Home\") {\n              iconName = \"home\";\n            } else if (route.name === \"NewsFeed\") {\n              iconName = \"web\";\n            } else if (route.name === \"Discussion\") {\n              iconName = \"chat\";\n            } else if (route.name === \"Profile\") {\n              iconName = \"account-circle\";\n            }\n            return _jsx(Icons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"tomato\",\n          tabBarInactiveTintColor: \"gray\"\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: Home\n      }), _jsx(Tab.Screen, {\n        name: \"NewsFeed\",\n        component: NewsFeed\n      }), _jsx(Tab.Screen, {\n        name: \"Discussion\",\n        component: NewsFeed\n      }), _jsx(Tab.Screen, {\n        name: \"Profile\",\n        component: Profile\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","Home","NewsFeed","Profile","NavigationContainer","createBottomTabNavigator","Icons","jsx","_jsx","jsxs","_jsxs","Tab","App","children","Navigator","screenOptions","_ref","route","header","vi","tabBarIcon","_ref2","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","Screen","component","styles","create"],"sources":["D:/RetroSoft official/license-checker/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport Home from \"./components/tab screens/Home\";\nimport NewsFeed from \"./components/tab screens/NewsFeed\";\nimport Profile from \"./components/tab screens/Profile\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Icons from \"@expo/vector-icons/MaterialIcons\";\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          header: {vi},\n          tabBarIcon: ({ color, size }) => {\n            let iconName;\n\n            if (route.name === \"Home\") {\n              iconName = \"home\";\n            } else if (route.name === \"NewsFeed\") {\n              iconName = \"web\";\n            } else if (route.name === \"Discussion\") {\n              iconName = \"chat\";\n            } else if (route.name === \"Profile\") {\n              iconName = \"account-circle\";\n            }\n            // You can return any component that you like here!\n            return <Icons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: \"tomato\",\n          tabBarInactiveTintColor: \"gray\",\n        })}\n      >\n        <Tab.Screen name=\"Home\" component={Home} />\n        <Tab.Screen name=\"NewsFeed\" component={NewsFeed} />\n        <Tab.Screen name=\"Discussion\" component={NewsFeed} />\n        <Tab.Screen name=\"Profile\" component={Profile} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({});\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE5C,OAAOC,IAAI;AACX,OAAOC,QAAQ;AACf,OAAOC,OAAO;AACd,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,KAAK,MAAM,kCAAkC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErD,IAAMC,GAAG,GAAGN,wBAAwB,CAAC,CAAC;AAEtC,eAAe,SAASO,GAAGA,CAAA,EAAG;EAC5B,OACEJ,IAAA,CAACJ,mBAAmB;IAAAS,QAAA,EAClBH,KAAA,CAACC,GAAG,CAACG,SAAS;MACZC,aAAa,EAAE,SAAAA,cAAAC,IAAA;QAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;QAAA,OAAQ;UAC7BC,MAAM,EAAE;YAACC,EAAE,EAAFA;UAAE,CAAC;UACZC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAAqB;YAAA,IAAlBC,KAAK,GAAAD,KAAA,CAALC,KAAK;cAAEC,IAAI,GAAAF,KAAA,CAAJE,IAAI;YACxB,IAAIC,QAAQ;YAEZ,IAAIP,KAAK,CAACQ,IAAI,KAAK,MAAM,EAAE;cACzBD,QAAQ,GAAG,MAAM;YACnB,CAAC,MAAM,IAAIP,KAAK,CAACQ,IAAI,KAAK,UAAU,EAAE;cACpCD,QAAQ,GAAG,KAAK;YAClB,CAAC,MAAM,IAAIP,KAAK,CAACQ,IAAI,KAAK,YAAY,EAAE;cACtCD,QAAQ,GAAG,MAAM;YACnB,CAAC,MAAM,IAAIP,KAAK,CAACQ,IAAI,KAAK,SAAS,EAAE;cACnCD,QAAQ,GAAG,gBAAgB;YAC7B;YAEA,OAAOhB,IAAA,CAACF,KAAK;cAACmB,IAAI,EAAED,QAAS;cAACD,IAAI,EAAEA,IAAK;cAACD,KAAK,EAAEA;YAAM,CAAE,CAAC;UAC5D,CAAC;UACDI,qBAAqB,EAAE,QAAQ;UAC/BC,uBAAuB,EAAE;QAC3B,CAAC;MAAA,CAAE;MAAAd,QAAA,GAEHL,IAAA,CAACG,GAAG,CAACiB,MAAM;QAACH,IAAI,EAAC,MAAM;QAACI,SAAS,EAAE5B;MAAK,CAAE,CAAC,EAC3CO,IAAA,CAACG,GAAG,CAACiB,MAAM;QAACH,IAAI,EAAC,UAAU;QAACI,SAAS,EAAE3B;MAAS,CAAE,CAAC,EACnDM,IAAA,CAACG,GAAG,CAACiB,MAAM;QAACH,IAAI,EAAC,YAAY;QAACI,SAAS,EAAE3B;MAAS,CAAE,CAAC,EACrDM,IAAA,CAACG,GAAG,CAACiB,MAAM;QAACH,IAAI,EAAC,SAAS;QAACI,SAAS,EAAE1B;MAAQ,CAAE,CAAC;IAAA,CACpC;EAAC,CACG,CAAC;AAE1B;AAEA,IAAM2B,MAAM,GAAGhC,UAAU,CAACiC,MAAM,CAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}