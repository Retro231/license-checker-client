{"ast":null,"code":"import { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Home from \"./components/tab screens/Home\";\nimport NewsFeed from \"./components/tab screens/NewsFeed\";\nimport Profile from \"./components/tab screens/Profile\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Icons from \"@expo/vector-icons/MaterialIcons\";\nimport Discussion from \"./components/tab screens/Discussion\";\nimport 'react-native-gesture-handler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar StackScreens = function StackScreens() {\n  _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Profile\",\n        component: Profile\n      })]\n    })\n  });\n};\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            if (route.name === \"Home\") {\n              iconName = \"home\";\n            } else if (route.name === \"NewsFeed\") {\n              iconName = \"web\";\n            } else if (route.name === \"Discussion\") {\n              iconName = \"chat\";\n            } else if (route.name === \"Profile\") {\n              iconName = \"account-circle\";\n            }\n            return _jsx(Icons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"tomato\",\n          tabBarInactiveTintColor: \"gray\",\n          headerShown: false\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: StackScreens\n      }), _jsx(Tab.Screen, {\n        name: \"NewsFeed\",\n        component: NewsFeed\n      }), _jsx(Tab.Screen, {\n        name: \"Discussion\",\n        component: Discussion\n      }), _jsx(Tab.Screen, {\n        name: \"Profile\",\n        component: Profile\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","Home","NewsFeed","Profile","NavigationContainer","createBottomTabNavigator","createStackNavigator","Icons","Discussion","jsx","_jsx","jsxs","_jsxs","Tab","StackScreens","children","Stack","Navigator","Screen","name","component","options","headerShown","App","screenOptions","_ref","route","tabBarIcon","_ref2","color","size","iconName","tabBarActiveTintColor","tabBarInactiveTintColor","styles","create"],"sources":["D:/RetroSoft official/license-checker/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport Home from \"./components/tab screens/Home\";\nimport NewsFeed from \"./components/tab screens/NewsFeed\";\nimport Profile from \"./components/tab screens/Profile\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport Icons from \"@expo/vector-icons/MaterialIcons\";\nimport Discussion from \"./components/tab screens/Discussion\";\nimport 'react-native-gesture-handler';\nconst Tab = createBottomTabNavigator();\n\nconst StackScreens = () => {\n  <NavigationContainer>\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"Home\"\n        component={Home}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen name=\"Profile\" component={Profile} />\n    </Stack.Navigator>\n  </NavigationContainer>;\n};\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ color, size }) => {\n            let iconName;\n\n            if (route.name === \"Home\") {\n              iconName = \"home\";\n            } else if (route.name === \"NewsFeed\") {\n              iconName = \"web\";\n            } else if (route.name === \"Discussion\") {\n              iconName = \"chat\";\n            } else if (route.name === \"Profile\") {\n              iconName = \"account-circle\";\n            }\n            // You can return any component that you like here!\n            return <Icons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: \"tomato\",\n          tabBarInactiveTintColor: \"gray\",\n          headerShown: false,\n        })}\n      >\n        <Tab.Screen name=\"Home\" component={StackScreens} />\n        <Tab.Screen name=\"NewsFeed\" component={NewsFeed} />\n        <Tab.Screen name=\"Discussion\" component={Discussion} />\n        <Tab.Screen name=\"Profile\" component={Profile} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}